/*! ngs3upload 22-02-2015 */
!function(a,b){angular.module("ngS3upload.config",[]).value("ngS3upload.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.config",[]).constant("ngS3Config",{theme:"bootstrap2"}),angular.module("ngS3upload.services",[]).service("S3Uploader",["$http","$q","$window",function(a,b){this.uploads=0;var c=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).success(function(a){d.resolve(a)}).error(function(a){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,d,e,f,g,h,i,j,k){function l(b){a.$apply(function(){a.progress=b.lengthComputable?Math.round(100*b.loaded/b.total):"unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof p.notify&&p.notify(c)})}function m(b){var f=b.srcElement||b.target;a.$apply(function(){c.uploads--,a.uploading=!1,204===f.status?(a.success=!0,p.resolve(f),a.$emit("s3upload:success",f,{path:d+e})):(a.success=!1,p.reject(f),a.$emit("s3upload:error",f))})}function n(b){var d=b.srcElement||b.target;a.$apply(function(){c.uploads--,a.uploading=!1,a.success=!1,p.reject(d),a.$emit("s3upload:error",d)})}function o(b){var d=b.srcElement||b.target;a.$apply(function(){c.uploads--,a.uploading=!1,a.success=!1,p.reject(d),a.$emit("s3upload:abort",d)})}var p=b.defer();a.attempt=!0;var q=new FormData;q.append("key",e),q.append("acl",f),q.append("Content-Type",k.type),q.append("AWSAccessKeyId",h),q.append("policy",i),q.append("signature",j),q.append("file",k);var r=new XMLHttpRequest;return r.upload.addEventListener("progress",l,!1),r.addEventListener("load",m,!1),r.addEventListener("error",n,!1),r.addEventListener("abort",o,!1),a.$emit("s3upload:start",r),a.uploading=!0,this.uploads++,r.open("POST",d,!0),r.send(q),p.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives",[]).directive("s3Upload",["$parse","S3Uploader","ngS3Config",function(c,d,e){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:{s3UploadOptions:"=",options:"=",bucket:"&",subdomain:"&",url:"=",path:"="},controller:["$scope","$element","$attrs","$transclude",function(a){a.attempt=!1,a.success=!1,a.uploading=!1,a.barClass=function(){return{"bar-success":a.attempt&&!a.uploading&&a.success}}}],compile:function(){return{pre:function(a){if(angular.isUndefined(a.bucket))throw Error("bucket is a mandatory attribute")},post:function(c,e,f,g){console.log("scope",c);var h=c.s3UploadOptions||c.options;h=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",getManualOptions:null,acl:"public-read",uploadingKey:"uploading",folder:"",enableValidation:!0,targetFilename:null},h);var i=c.bucket(),j=c.subdomain()||"s3",k=(angular.element(e.children()[0]),angular.element(e.find("input")[0]));c.click=function(){k[0].click()},g.$render=function(){c.filename=g.$viewValue};var l=function(){function a(a){h.enableValidation&&g.$setValidity("uploading",!1);var f="https://"+i+"."+j+".amazonaws.com/",l=h.targetFilename?c.$eval(h.targetFilename):h.folder+(new Date).getTime()+"-"+d.randomString(16)+"."+k;d.upload(c,f,l,h.acl,e.type,a.key,a.policy,a.signature,e).then(function(){g.$setViewValue(f+l),c.filename=g.$viewValue,c.url=c.filename;var a=b.createElement("a");a.href=c.url,c.path=a.pathname,h.enableValidation&&(g.$setValidity("uploading",!0),g.$setValidity("succeeded",!0))},function(){c.filename=g.$viewValue,h.enableValidation&&(g.$setValidity("uploading",!0),g.$setValidity("succeeded",!1))})}var e=c.selectedFile,f=e.name,k=f.split(".").pop();angular.isObject(h.getManualOptions)?a(h.getManualOptions):d.getUploadOptions(h.getOptionsUri).then(function(b){a(b)},function(a){throw Error("Can't receive the needed options for S3 "+a)})};e.bind("change",function(){if(c.selectedFile=k[0].files[0],a.FileReader){var b=new a.FileReader;b.onerror=function(a){console.error("Error reading image data",a),c.error=a},b.onloadend=function(){c.$apply(function(){c.imageURI=b.result})},b.readAsDataURL(c.selectedFile)}c.$apply(function(){h.submitOnChange&&l()})}),angular.isDefined(f.doUpload)&&c.$watch(f.doUpload,function(a){a&&l()})}}},templateUrl:function(a,b){var c=b.templateUrl;if(!c){var d=b.theme||e.theme;c="theme/"+d+".html"}return c}}}]),angular.module("ngS3upload").run(["$templateCache",function(a){"use strict";a.put("theme/bootstrap2.html",'<div class="upload-wrap">\n  <button class="btn btn-primary" type="button" ng-click="click()"><span ng-if="!filename">Choose file</span><span ng-if="filename">Replace file</span></button>\n  <a ng-href="{{ filename  }}" target="_blank" class="" ng-if="filename" > Stored file </a>\n  <div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px">\n    <div class="bar" style="width: {{ progress }}%;" ng-class="barClass()"></div>\n    </div>\n  <input type="file" style="display: none"/>\n</div>\n'),a.put("theme/bootstrap3.html",'<div class="upload-wrap">\n  <button class="btn btn-primary" type="button" ng-click="click()"><span ng-if="!filename">Choose file</span><span ng-if="filename">Replace file</span></button>\n  <a ng-href="{{ filename }}" target="_blank" class="" ng-if="filename" > Stored file </a>\n  <div class="progress">\n    <div class="progress-bar progress-bar-striped" ng-class="{active: uploading}" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: {{ progress }}%; margin-top: 10px" ng-class="barClass()">\n      <span class="sr-only">{{progress}}% Complete</span>\n    </div>\n  </div>\n  <input type="file" style="display: none"/>\n</div>\n')}])}(window,document);